name: Contacts

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  APIs_DockerBuild:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
   
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.300

    - name: Restore Dependencies
      run: cd Contact && dotnet restore
      
    - name: Build
      run: cd Contact && dotnet build --no-restore
 
    - name: API Create Contact - Docker Build
      working-directory: ./Contact
      run: docker build --no-cache -t contactcreateapiv1 -f APIs/CreateAPI/Dockerfile .

    - name: API Delete Contact - Docker Build
      working-directory: ./Contact
      run: docker build --no-cache -t contactdeleteapiv1 -f APIs/DeleteAPI/Dockerfile .
      
    - name: API Read Contact - Docker Build
      working-directory: ./Contact
      run: docker build --no-cache -t contactreadapiv1 -f APIs/ReadAPI/Dockerfile .
    
    - name: API Update Contact - Docker Build
      working-directory: ./Contact
      run: docker build --no-cache -t contactupdateapiv1 -f APIs/UpdateAPI/Dockerfile .  
    

  Workers_DockerBuild:
    runs-on: ubuntu-latest
    needs: APIs_DockerBuild
    
    steps:
    - uses: actions/checkout@v4
   
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.300

    - name: Restore dependencies
      run: cd Contact && dotnet restore
      
    - name: Build
      run: cd Contact && dotnet build --no-restore 
    
    - name: Worker Create Contant - Docker Build
      working-directory: ./Contact
      run: docker build -t createworker-tech3:latest -f ./Workers/CreateWorker/Dockerfile .
      
    - name: Worker Update Contant - Docker Build
      working-directory: ./Contact
      run: docker build -t deleteworker-tech3:latest -f ./Workers/DeleteWorker/Dockerfile . 
      
    - name: Worker Delete Contant - Docker Build
      working-directory: ./Contact
      run: docker build -t updateworker-tech3:latest -f ./Workers/UpdateWorker/Dockerfile .
      
  UnitTests:
     runs-on: ubuntu-latest
     needs: Workers_DockerBuild

     steps:     
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.300
          
      - name: Restore dependencies
        run: cd Contact/ && dotnet restore
        
      - name: Run Unit Tests
        run: cd Contact/Tests/Unit && dotnet test --filter Unit
        
  IntegrationTests:
     runs-on: ubuntu-latest
     needs: UnitTests

     steps:     
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.300
          
      - name: Restore dependencies
        run: cd Contact/ && dotnet restore
        
      - name: Run Integration Tests
        run: cd Contact/Tests/Integration && dotnet test --filter Integration
